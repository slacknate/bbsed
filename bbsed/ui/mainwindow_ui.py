# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'bbsed\ui\mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1228, 853)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.install_box = QtWidgets.QGroupBox(self.centralwidget)
        self.install_box.setObjectName("install_box")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.install_box)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.select_steam = QtWidgets.QPushButton(self.install_box)
        self.select_steam.setObjectName("select_steam")
        self.horizontalLayout.addWidget(self.select_steam)
        self.steam_path = QtWidgets.QLineEdit(self.install_box)
        self.steam_path.setEnabled(False)
        self.steam_path.setObjectName("steam_path")
        self.horizontalLayout.addWidget(self.steam_path)
        self.verticalLayout.addWidget(self.install_box)
        self.character_box = QtWidgets.QGroupBox(self.centralwidget)
        self.character_box.setEnabled(False)
        self.character_box.setObjectName("character_box")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.character_box)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.char_select = QtWidgets.QComboBox(self.character_box)
        self.char_select.setObjectName("char_select")
        self.horizontalLayout_2.addWidget(self.char_select)
        self.palette_select = QtWidgets.QComboBox(self.character_box)
        self.palette_select.setObjectName("palette_select")
        self.horizontalLayout_2.addWidget(self.palette_select)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.verticalLayout.addWidget(self.character_box)
        self.sprite_group = QtWidgets.QGroupBox(self.centralwidget)
        self.sprite_group.setEnabled(False)
        self.sprite_group.setObjectName("sprite_group")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.sprite_group)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.file_list = QtWidgets.QListWidget(self.sprite_group)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.file_list.sizePolicy().hasHeightForWidth())
        self.file_list.setSizePolicy(sizePolicy)
        self.file_list.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.file_list.setObjectName("file_list")
        self.horizontalLayout_3.addWidget(self.file_list)
        self.sprite_preview = QtWidgets.QGraphicsView(self.sprite_group)
        self.sprite_preview.setObjectName("sprite_preview")
        self.horizontalLayout_3.addWidget(self.sprite_preview)
        self.verticalLayout.addWidget(self.sprite_group)
        MainWindow.setCentralWidget(self.centralwidget)
        self.palette_toolbar = QtWidgets.QToolBar(MainWindow)
        self.palette_toolbar.setEnabled(False)
        self.palette_toolbar.setMovable(True)
        self.palette_toolbar.setObjectName("palette_toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.palette_toolbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1228, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuView = QtWidgets.QMenu(self.menuBar)
        self.menuView.setObjectName("menuView")
        self.menuPalettes = QtWidgets.QMenu(self.menuBar)
        self.menuPalettes.setObjectName("menuPalettes")
        MainWindow.setMenuBar(self.menuBar)
        self.exit = QtWidgets.QAction(MainWindow)
        self.exit.setObjectName("exit")
        self.apply_all = QtWidgets.QAction(MainWindow)
        self.apply_all.setObjectName("apply_all")
        self.apply_character = QtWidgets.QAction(MainWindow)
        self.apply_character.setObjectName("apply_character")
        self.apply_palette = QtWidgets.QAction(MainWindow)
        self.apply_palette.setObjectName("apply_palette")
        self.discard_all = QtWidgets.QAction(MainWindow)
        self.discard_all.setObjectName("discard_all")
        self.discard_character = QtWidgets.QAction(MainWindow)
        self.discard_character.setObjectName("discard_character")
        self.discard_palette = QtWidgets.QAction(MainWindow)
        self.discard_palette.setObjectName("discard_palette")
        self.restore_all = QtWidgets.QAction(MainWindow)
        self.restore_all.setObjectName("restore_all")
        self.restore_character = QtWidgets.QAction(MainWindow)
        self.restore_character.setObjectName("restore_character")
        self.reset_all = QtWidgets.QAction(MainWindow)
        self.reset_all.setObjectName("reset_all")
        self.reset_character = QtWidgets.QAction(MainWindow)
        self.reset_character.setObjectName("reset_character")
        self.reset_palette = QtWidgets.QAction(MainWindow)
        self.reset_palette.setObjectName("reset_palette")
        self.launch_bbcf = QtWidgets.QAction(MainWindow)
        self.launch_bbcf.setObjectName("launch_bbcf")
        self.view_palette = QtWidgets.QAction(MainWindow)
        self.view_palette.setCheckable(True)
        self.view_palette.setChecked(False)
        self.view_palette.setObjectName("view_palette")
        self.view_zoom = QtWidgets.QAction(MainWindow)
        self.view_zoom.setCheckable(True)
        self.view_zoom.setObjectName("view_zoom")
        self.clear_entire_cache = QtWidgets.QAction(MainWindow)
        self.clear_entire_cache.setObjectName("clear_entire_cache")
        self.clear_character_cache = QtWidgets.QAction(MainWindow)
        self.clear_character_cache.setObjectName("clear_character_cache")
        self.clear_palette_cache = QtWidgets.QAction(MainWindow)
        self.clear_palette_cache.setObjectName("clear_palette_cache")
        self.import_palettes = QtWidgets.QAction(MainWindow)
        self.import_palettes.setObjectName("import_palettes")
        self.export_palettes = QtWidgets.QAction(MainWindow)
        self.export_palettes.setObjectName("export_palettes")
        self.palette_toolbar.addAction(self.apply_all)
        self.palette_toolbar.addAction(self.apply_character)
        self.palette_toolbar.addAction(self.apply_palette)
        self.palette_toolbar.addSeparator()
        self.palette_toolbar.addAction(self.discard_all)
        self.palette_toolbar.addAction(self.discard_character)
        self.palette_toolbar.addAction(self.discard_palette)
        self.palette_toolbar.addSeparator()
        self.palette_toolbar.addAction(self.reset_all)
        self.palette_toolbar.addAction(self.reset_character)
        self.palette_toolbar.addAction(self.reset_palette)
        self.palette_toolbar.addSeparator()
        self.palette_toolbar.addAction(self.clear_entire_cache)
        self.palette_toolbar.addAction(self.clear_character_cache)
        self.palette_toolbar.addAction(self.clear_palette_cache)
        self.palette_toolbar.addSeparator()
        self.palette_toolbar.addAction(self.restore_all)
        self.palette_toolbar.addAction(self.restore_character)
        self.menuFile.addAction(self.launch_bbcf)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.exit)
        self.menuView.addAction(self.view_palette)
        self.menuView.addAction(self.view_zoom)
        self.menuPalettes.addAction(self.import_palettes)
        self.menuPalettes.addAction(self.export_palettes)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuPalettes.menuAction())
        self.menuBar.addAction(self.menuView.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.install_box.setTitle(_translate("MainWindow", "Steam Installation"))
        self.select_steam.setText(_translate("MainWindow", "Select"))
        self.character_box.setTitle(_translate("MainWindow", "Character + Palette"))
        self.sprite_group.setTitle(_translate("MainWindow", "Sprite"))
        self.palette_toolbar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuPalettes.setTitle(_translate("MainWindow", "Palettes"))
        self.exit.setText(_translate("MainWindow", "&Exit"))
        self.apply_all.setText(_translate("MainWindow", "Apply All"))
        self.apply_all.setToolTip(_translate("MainWindow", "Apply all palettes to BBCF game data"))
        self.apply_character.setText(_translate("MainWindow", "Apply Character"))
        self.apply_character.setToolTip(_translate("MainWindow", "Apply selected character palettes to BBCF game data"))
        self.apply_palette.setText(_translate("MainWindow", "Apply Palette"))
        self.apply_palette.setToolTip(_translate("MainWindow", "Apply selected palette to BBCF game data"))
        self.discard_all.setText(_translate("MainWindow", "Discard All"))
        self.discard_all.setToolTip(_translate("MainWindow", "Discard all palette changes"))
        self.discard_character.setText(_translate("MainWindow", "Discard Character"))
        self.discard_character.setToolTip(_translate("MainWindow", "Discard selected character palette changes"))
        self.discard_palette.setText(_translate("MainWindow", "Discard Palette"))
        self.discard_palette.setToolTip(_translate("MainWindow", "Discard selected palette changes"))
        self.restore_all.setText(_translate("MainWindow", "Restore All"))
        self.restore_all.setToolTip(_translate("MainWindow", "Restore game data for all palettes"))
        self.restore_character.setText(_translate("MainWindow", "Restore Character"))
        self.restore_character.setToolTip(_translate("MainWindow", "Restore game data for selected character palettes"))
        self.reset_all.setText(_translate("MainWindow", "Reset All"))
        self.reset_all.setToolTip(_translate("MainWindow", "Reset all cached palettes to backed up version"))
        self.reset_character.setText(_translate("MainWindow", "Reset Character"))
        self.reset_character.setToolTip(_translate("MainWindow", "Reset cached selected character palettes to backed up version"))
        self.reset_palette.setText(_translate("MainWindow", "Reset Palette"))
        self.reset_palette.setToolTip(_translate("MainWindow", "Reset cached selected palette to backed up version"))
        self.launch_bbcf.setText(_translate("MainWindow", "&Launch BBCF"))
        self.launch_bbcf.setToolTip(_translate("MainWindow", "Launch BBCF"))
        self.view_palette.setText(_translate("MainWindow", "Palette Dialog"))
        self.view_zoom.setText(_translate("MainWindow", "Zoom Dialog"))
        self.clear_entire_cache.setText(_translate("MainWindow", "Clear Entire Cache"))
        self.clear_entire_cache.setToolTip(_translate("MainWindow", "Clear all cached data"))
        self.clear_character_cache.setText(_translate("MainWindow", "Clear Character Cache"))
        self.clear_character_cache.setToolTip(_translate("MainWindow", "Clear cached character data"))
        self.clear_palette_cache.setText(_translate("MainWindow", "Clear Palette Cache"))
        self.clear_palette_cache.setToolTip(_translate("MainWindow", "Clear cached palette files"))
        self.import_palettes.setText(_translate("MainWindow", "Import"))
        self.export_palettes.setText(_translate("MainWindow", "Export"))
